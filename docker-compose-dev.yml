version: "3.8"

networks:
  default:
    name: asar-dev

services:
  rasa:
    container_name: rasa
    image: devilhyt/rasa:custom
    command: ["run", "-vv", "--enable-api", '--cors="*"']
    volumes:
      - ./asar-data/app:/app
      - ./asar-data/data:/data
    ports:
      - 5005:5005
    restart: unless-stopped

  action:
    container_name: action
    image: devilhyt/rasa-sdk:custom
    command: ["start", "--actions=actions", "--auto-reload"]
    privileged: true
    volumes:
      - ./asar-data/app/actions:/app/actions
    ports:
      - 5055:5055
    restart: unless-stopped

  api:
    container_name: api
    image: devilhyt/asar-api:latest
    command:
      [
        "--bind=0.0.0.0:5500",
        "--worker-class=gthread",
        "--workers=1",
        "--threads=4",
        "--reload",
        "--access-logfile=-",
        "--access-logformat='%({x-forwarded-for}i)s %(h)s %(l)s %(u)s %(t)s \"%(r)s\" %(s)s %(b)s \"%(f)s\" \"%(a)s\"'",
        "--log-level=debug",
        "asar_api:create_app()",
      ]
    volumes:
      - ./api/app:/app
      - ./asar-data/data:/data
      - ./asar-data/app/actions:/actions
    environment:
      SECRET_KEY:
      ASAR_USERNAME: admin
      ASAR_PASSWORD: admin
      RASA_API_PROTOCOL: http
      RASA_API_HOST: rasa
      RASA_API_PORT: 5005
      ASAR_API_PROTOCOL: http
      ASAR_API_HOST: api
      ASAR_API_PORT: 5500
      # RASA_API_AGENT_PROTOCOL: http
      # RASA_API_AGENT_HOST: "192.168.0.8"
      # RASA_API_AGENT_PORT: 5005
      # ASAR_API_AGENT_PROTOCOL: http
      # ASAR_API_AGENT_HOST: "raspberrypi"
      # ASAR_API_AGENT_PORT: 5500
      RASA_ACTIONS_ROOT: /actions
    ports:
      - 5500:5500
    restart: unless-stopped
    extra_hosts:
      - "host.docker.internal:host-gateway"

  web:
    container_name: web
    image: devilhyt/asar-web:latest
    environment:
      RASA_API_PROTOCOL: http
      RASA_API_HOST: rasa
      RASA_API_PORT: 5005
      ASAR_API_PROTOCOL: http
      ASAR_API_HOST: api
      ASAR_API_PORT: 5500
    ports:
      - 80:80
    depends_on:
      - api
    restart: unless-stopped

  # tunnel:
  #   container_name: tunnel
  #   image: cloudflare/cloudflared:latest
  #   command: "tunnel --no-autoupdate run"
  #   environment:
  #     TUNNEL_TOKEN:
  #   restart: unless-stopped
